# metadati
name: CI/CD for spring boot tutorial
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
#  testing:
#    name: Run Unit Tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v4
#      - name: setup JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '21'
#      - name: maven cache
#        uses: actions/cache@v1
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
#          restore-keys: ${{runner.os}}-m2
#      - name: Start MongoDB
#        uses: supercharge/mongodb-github-action@1.10.0
#      - name: esegui tests
#        run: mvn -B test
#  quality-check:
#    needs: testing
#    name: analisi SonarCloud
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v4
#      - name: setup JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '21'
#      - name: cache sonarcloud pkgs
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{runner.os}}-sonar
#      - name: maven cache
#        uses: actions/cache@v1
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
#          restore-keys: ${{runner.os}}-m2
#      - name: analisi sonarcloud
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AntonioDiSalvo_spring-boot-tutorial
#        env:
#          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
#  build:
#    needs: quality-check
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v4
#      - name: setup JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '21'
#      - name: maven cache
#        uses: actions/cache@v1
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
#          restore-keys: ${{runner.os}}-m2
#      - name: Build with Maven
#        run: mvn -B package -DskipTests --file pom.xml
#      - name: upload release
#        uses: actions/upload-artifact@v2
#        with:
#            name: myArtifactRelease
#            path: target/spring-boot-tutorial-0.0.6-SNAPSHOT.jar
  push_image_to_registry:
    name: Push immagine docker sul registry Docker Hub
    #needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      # login presso dockerhub
      - name: login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
       # raccogliere i metadati relativi a nome e tag (per il repo dockerhub)
      - name: raccolta metadati
        id: metadata
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: disalvoantonio/spring-boot-tutorial
          tags: type=semver,pattern={{version}}
      - name: setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: '21'
      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
          restore-keys: ${{runner.os}}-m2
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: build e push immagine docker
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: disalvoantonio/spring-boot-tutorial:version #${{ steps.metadata.output.tags }}
      - name: installazione yq
        run: |
          sudo curl -L https://github.com/mikefarah/yq/releases/download/v4.35.2/yq_linux_amd64 -o /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
      - name: update image tag
        run: |
          yq -i e '.spec.template.spec.containers.[0].image = "disalvoantonio/spring-boot-tutorial:version"' k8s/spring-boot-tutorial.yaml
      - name: commit changes to infra repo
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'me@example.org'
          git add k8s/spring-boot-tutorial.yaml
          git commit -m "update image tag"
          git push origin HEAD:main
#      - name: push / pr
#        uses: peter-evans/create-pull-request@v5
#        with:
#          title: new PR for image change
#          branch: update-infra-manifest
#          commit-message: aggiornamento manifest
